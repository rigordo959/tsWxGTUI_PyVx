#-----------------------------------------------------------
#"Time-stamp: <10/30/2015 11:45:16 AM rsg>"
#-----------------------------------------------------------

====================== File: BUGS.txt ======================

   +----+----+  TeamSTARS "tsWxGTUI_PyVx" Toolkit
   | ts | Wx |      with Python 2x & Python 3x based
   +----+----+         Command Line Interface (CLI)
   | G T U I |      and "Curses"-based "wxPython"-style, 
   +---------+         Graphical-Text User Interface (GUI)
 
   Get that cross-platform, pixel-mode "wxPython" feeling
   on character-mode 8-/16-color (xterm-family) & non-color
   (vt100-family) terminals and terminal emulators.

   You can find this and other plain-text files in the
   Toolkit subdirectory named:

       "./<Toolkit Recipient's Repository>/Documents".

       <Your Working Repository>
       (e.g. "tsWxGTUI_PyVx_Repository") 
         |
         |
         +-- ["Documents"]

========================== ISSUES ==========================

The following tabulation discloses the status of issues
associated with the project released via:

   "rigordo959/tsWxGTUI_PyVx_Repository" on GitHub.com

Please submit new issues, and comments on existing ones,
via email to "SoftwareGadgetry@comcast.net".

   ---------------------------------------------------------

 1. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxStatusBar
    SYNOPSIS:  should not need to be appended to frame as a
               separate object.
    COMMENTS:

    Revise design to eliminate need for
    registerGuiTopLevelObjectStatusBar. Perhaps the design
    can adjust the frame size to include the status bar
    rather than append it as a separate object.

   ---------------------------------------------------------

 2. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibCLI/tsDoubleLinkedList
    SYNOPSIS:  needs expanded test suite in a separate test
               module.
    COMMENTS:

    Expand the set of built-in, stand-alone tests to become a
    full unit-test suite. Currently, the tests only exercise
    a subset the possible usage variations. The expanded
    suite ought to be moved into to a separate test module.

   ---------------------------------------------------------

 3. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLib/tsExceptions
    SYNOPSIS:  only a small fraction of the 8-bit exception
               values have been defined.
    COMMENTS:

    Review and finalize the available exceptions and errors.

   ---------------------------------------------------------

 4. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLib/Logger
    SYNOPSIS:  many methods do not support args and *kw.
    COMMENTS:

    Methods should support args and *kw.

   ---------------------------------------------------------

 5. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibCLI/tsPlatformRunTimeEnvironment
    SYNOPSIS:  lacks some Mac OS X information.
    COMMENTS:

    _getNetworkIdentification - Cannot explain missing Mac
    OS X information.

   ---------------------------------------------------------

 6. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibCLI/tsPlatformRunTimeEnvironment
    SYNOPSIS:  lacks some Mac OS X information.
    COMMENTS:

    _getMacOperatingSystem - Cannot explain missing Mac OS X
    information.

   ---------------------------------------------------------

 7. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibCLI/tsPlatformRunTimeEnvironment
    SYNOPSIS:  has outdated import mechanisms that preclude
               back porting to Python 2.3.4.
    COMMENTS:

    Resolve outdated import mechanisms that preclude back
    porting to Python 2.3.4.

   ---------------------------------------------------------

 8. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibCLI/tsReportUtilities
    SYNOPSIS:  has unresolved application segmentation fault
               when import enabled.
    COMMENTS:

    Resolve application segmentation fault when import is
    enabled.

   ---------------------------------------------------------

 9. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibCLI/tsReportUtilities
    SYNOPSIS:  invokes
               tsfl.TsFileLock(tsfl.TsFileLock.EVENTID)
               which does not work yet
    COMMENTS:

    tsfl.TsFileLock(tsfl.TsFileLock.EVENTID) does not work
    yet.

   ---------------------------------------------------------

10. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibCLI/tsSysCommands
    SYNOPSIS:  subprocess method usage needs upgrade from
               Python 2.4 to Python 2.7 and 3.4.
    COMMENTS:

    Upgrade subprocess method usage from Python 2.4 to
    Python 2.7 and 3.4.

   ---------------------------------------------------------

11. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsLinesOfCode
    SYNOPSIS: 
    COMMENTS:

    Propose elimination of threading overhead by launching
    Lines-Of-Code application process instead of application
    thread.

   ---------------------------------------------------------

12. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsLinesOfCode
    SYNOPSIS:
    COMMENTS:

    Troubleshoot IOError that occurs only on cygwin but not
    on Cygwin-X or Mac OS X.

   ---------------------------------------------------------

13. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsLinesOfCode
    SYNOPSIS:
    COMMENTS:

    Apply syntaxFeatures tabulation in a generic analyzer
    method to replace file type specific methods. Algorithm
    differences might make this impractical.

   ---------------------------------------------------------

14. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsLinesOfCode
    SYNOPSIS:
    COMMENTS:

    Eliminate the required positional argument by which the
    operator specifies the parser. Use of keyword option,
    with default to None would be more user friendly.

   ---------------------------------------------------------

15. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsLinesOfCode
    SYNOPSIS:
    COMMENTS:

   ---------------------------------------------------------

16. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsSoftwareParser
    SYNOPSIS:
    COMMENTS:

   ---------------------------------------------------------

17. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsSoftwareParser
    SYNOPSIS:  has IOError on Cygwin but not on Cygwin-X
               or Mac OS X.
    COMMENTS:

   ---------------------------------------------------------

18. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsSoftwareParser
    SYNOPSIS:  should tabulate based on syntaxFeatures
               instead of file type.
    COMMENTS:

   ---------------------------------------------------------

19. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsSoftwareParser
    SYNOPSIS:  inappropriate coupling between external
               option definition and internal option
               handling
    COMMENTS:

   ---------------------------------------------------------

20. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsToolsLibCLI/tsSoftwareParser
    SYNOPSIS:  uses source code header instead of run-time
               header.
    COMMENTS:

   ---------------------------------------------------------

21. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxEventDaemon
    SYNOPSIS:  does not support multiple threads or
               processes.
    COMMENTS:

   ---------------------------------------------------------

22. STATUS:    CLOSED
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibCLi/tsSysCommands
    SYNOPSIS:  will require a non-backward compatible
               version for Python 3.5.
    COMMENTS:

    Backward compatibility has been verified. Only issue
    will be future use of newly introduced features such
    as run method.

   ---------------------------------------------------------

23. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: setup.py
    SYNOPSIS:  Microsoft Windows 8.1 Desktop Platform denies
               write access during installation via setup.
    COMMENTS:

   ---------------------------------------------------------

24. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: setup.py
    SYNOPSIS:  Microsoft Windows 10 Desktop Platform denies
               write access during installation via setup.
    COMMENTS:

   ---------------------------------------------------------

25. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: setup.py
    SYNOPSIS:  Apple Mac OS 10.10 (Yosemite) Desktop Plat-
               form denies write access during installation
               via setup.
    COMMENTS:

   ---------------------------------------------------------

26. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: ManPages/tsManPagesLibCLI
    SYNOPSIS:  exist only as text files which must be
               manually displayed.
    COMMENTS:

   ---------------------------------------------------------

27. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: ManPages/tsManPagesLibGUI
    SYNOPSIS:  exist only as text files which must be
               manually displayed.
    COMMENTS:

   ---------------------------------------------------------

28. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: ManPages/tsManPagesTestsLibCLI
    SYNOPSIS:  exist only as text files which must be
               manually displayed.
    COMMENTS:

   ---------------------------------------------------------

29. STATUS:    CLOSED
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: ManPages/tsManPagesTestsLibCLI
    SYNOPSIS:  Creates, but does not install, only
               rudimentary ManPages from source code
    COMMENTS:

   ---------------------------------------------------------

30. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: ManPages/tsManPagesTestsLibGUI
    SYNOPSIS:  exist only as text files which must be
               manually displayed.
    COMMENTS:

   ---------------------------------------------------------

31. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: ManPages/tsManPagesToolsCLI
    SYNOPSIS:  exist only as text files which must be
               manually displayed.
    COMMENTS:

   ---------------------------------------------------------

32. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxScrolledText
    SYNOPSIS:  bypasses nested event dispatching via direct
               handler call-back.
    COMMENTS:

   ---------------------------------------------------------

33. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxTaskBar
    SYNOPSIS:  ought to have popup help and means to
               unhide frame/dialog.
    COMMENTS:  Enhancement to add popup menu to taskbar
               button with appropriate option choices.
               Activate/cancel frame/dialog iconize,
               resize/restore frame/dialog size, close
               frame/dialog in manner similar to Microsoft
               Windows, Linux or Unix.
               The enhancement would provide a flexible
               means of handling or recovering from an
               iconization which had hidden (rather than
               re-sized) the frame or dialog and associated
               child GUI objects. The alternative to the
               enhancement is to assume that hiding had been
               used and that clicking on a specific taskbar
               button should cancel it if hiding was active
               or else resize it to its previous size.

               Also need to resolve failure of focus control
               to shift GUI object from background to
               foreground.

   ---------------------------------------------------------

34. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxEventLoop
    SYNOPSIS:  handles mouse clicks but not the mouse
               press-move-release needed for cut-paste.
    COMMENTS:

   ---------------------------------------------------------

35. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxTextEditBox
    SYNOPSIS:  is too slow, unresponsive and buggy.
    COMMENTS:  The curses.textpad module provides a Textbox
    class that handles elementary text editing in a curses
    window, supporting a set of keybindings resembling those
    of Emacs (thus, also of Netscape Navigator, BBedit 6.x,
    FrameMaker, and many other programs). The module also
    provides a rectangle-drawing function useful for
    framing text boxes or for other purposes.

    Unfortunately, its use within the wxPython emulation
    suspends updates to other wxPython GUI objects.

    An attempt to substitute a character input event driven
    emulation is too slow, unresponsive and buggy.

   ---------------------------------------------------------

36. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxPasswordEntryDialog
    SYNOPSIS:  is too slow, unresponsive and buggy.
    COMMENTS:  The curses.textpad module provides a Textbox
    class that handles elementary text editing in a curses
    window, supporting a set of keybindings resembling those
    of Emacs (thus, also of Netscape Navigator, BBedit 6.x,
    FrameMaker, and many other programs). The module also
    provides a rectangle-drawing function useful for
    framing text boxes or for other purposes.

    Unfortunately, its use within the wxPython emulation
    suspends updates to other wxPython GUI objects.

    An attempt to substitute a character input event driven
    emulation is too slow, unresponsive and buggy.

   ---------------------------------------------------------

37. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: Curses (and nCurses)
    SYNOPSIS:  support up to 256-color pairs and
               therefore only 8-/16-colors
    COMMENTS:

   ---------------------------------------------------------

38. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxEventLoop
    SYNOPSIS:  synthesizes mouse button click support for
               vt100 and vt220 terminals
    COMMENTS:

   ---------------------------------------------------------

39. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: SourceDistributions
    SYNOPSIS:  symbolic links to Documents, ManPages and
               ProjectNotebooks.
    COMMENTS:

    The SourceDistributions (Site-Packages and Developer-
    Sandboxes) require replicated copies of Documents,
    ManPages and ProjectNotebooks but symbolic links are
    not practical when masters are on a remote server or
    when copies will be on Linux, Mac OS X, Unix or Cygwin
    (which uses a different linkage mechanism).

    Symbolic links would be preferable but are NOT used
    because:

    1) they are platform dependent; Cygwin ones are
       Cygwin-specific text files while Linux, Mac OS X,
       Microsoft Windows and Unix ones are POSIX host-
       specific text files (From Wikipedia, the free
       encyclopedia at
       https://en.wikipedia.org/wiki/Symbolic_link)

    2) there is a single cross-platform source code version

   ---------------------------------------------------------

40. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: 
    SYNOPSIS:  According to software version control con-
               vention there should only be one project in
               a repository but this one has four.
    COMMENTS:

    There is one site-package and one developer-sandbox for
    Python 2x and another pair for Python 3x. They share a
    single GitHub repository in order to:

    1) facilitate development by a single individual; and

    2) ensure that there is but one Application Programming
       Interface and one User Interface.

   ---------------------------------------------------------

41. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  requires operator to manually resize console
               control application before GUI application
               launch.
    COMMENTS:

    The tsWxGraphicalTextUserInterface enables handling of
    the signal (SIGWINCH) sent to a computer program when
    its controlling terminal changes size. The handler
    prints a message reporting receipt of the signal but
    is not yet able to initiate a re-sizing of the Python
    curses-based wxPython application. Instead, the message
    is at least captured in the application's Redirected
    Output log file for stdout/stderr. The log thereby
    explains why the application may have terminated
    unexpectedly.

    Whether the re-sizing of the controlling terminal
    window is initiated by the operator or by the
    application, it is undesirable to automatically
    re-start the Python application in order to
    dynamically resize its character-mode Graphical
    User Interface:

    1) The operator would be distracted by the
       time-consuming process of clearing the screen and
       sequentially rebuilding the application's display
       features.

    2) By contrast, a pixel-mode Graphical User Interface
       is dynamically and instantly resized by the host
       operating system without any automatic or manual
       re-starting of the application.

   ---------------------------------------------------------

42. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tslibCLI/tsApplication
    SYNOPSIS:  terminates on some platforms when the appli-
               cation launch windows is too small.
    COMMENTS:

    The tslibCLI/tsApplication checks that the application
    launch (console) window is at least the minimum size
    required to display the (optional) splash screen. It
    uses a print statement, with embedded control data) to
    increase the application launch window to the minimum
    size. It works only on recent Cygwin (free Linux-like
    plug-in, from Red Hat. for Microsoft Windows), Linux
    and Mac OS X distributions. It aborts the launch on Unix
    and older Cygwin and Linux distributions.

    On Mac OS X 10.10.3 (Yosemite), tsApplication resizes
    and launches only with third-party "iTerm2" console
    application. With Apple "Terminal" application,
    tsWxGraphicalUserInterface terminates after re-sizing
    upon its receipt of signal SYNWINCH. The operator can
    then relaunch successfully with the now re-sized
    console.

   ---------------------------------------------------------

43. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  does NOT provide means for application pro-
               grams to delete wxPython-style GUI Objects.
    COMMENTS:  tsLibGUI/tsWxGraphicalTextUserInterface does
    NOT provide means for application programs to delete
    wxPython-style GUI objects.

    Application programs cannot delete wxPython-style GUI
    objects because Python's "nCurses" module does not have
    the "nCurses_delwin" method for deleting "nCurses"
    style GUI objects.

    Not sure this issue can be resolved. A search for an
    explanation for why Python does not support the delwin
    function, came upon the following "nCurses" man page
    entry:

        "Calling delwin deletes the named window, freeing
        all memory associated with it (it does not actually
        erase the window's screen image). Subwindows must
        be deleted before the main window can be deleted."

   ---------------------------------------------------------

44. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  Abort Signal (Ctrl-C) Handling is incon-
               sistant.
    COMMENTS:  tsLibGUI/tsWxGraphicalTextUserInterface
    Abort Signal (Ctrl-C) Handling is inconsistant.

    Applications occasionally terminate without restoring
    the display to its previous state in which keyboard
    input is echoed to the display.

    Troubleshooting Hint: The operator must type "stty sane"
    to manuallly restore the display to its normal state.

    The operator might want to Clear Screen by typing
    Ctrl-L shell command"^L".

   ---------------------------------------------------------

45. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  lacks application program blocking mechanism
               for keyboard input.
    COMMENTS:  tsLibGUI/tsWxGraphicalTextUserInterface lacks
    application program blocking mechanism for keyboard
    input and keyboard input subject to restrictions:

    tsWxPasswordEntryDialog is derived from tsWxTextEntryDialog.
    The latter uses tsWxTextEditBox which has usability issues
    in both non-event driven and event driven modes.

    The non-event-driven mode uses curses.textpad.Textbox
    which monopolizes GUI platform and ignores mouse button
    clicks until the operator terminates input via double
    entry of control-G key. It also, responds to operator
    input after the control-G.

    The event driven mode uses an python emulation of
    curses.textpad.Textbox that provides enhanced edit
    capabilities while recognizing mouse button clicks
    and keyboard press-release activity. However, the
    display blinks as each new text character is displayed.

    More imporrtantly, there is no mechanism to block the
    application program pending the operator's completion
    of text input.

   ---------------------------------------------------------

46. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  mouse "Click" Event handling can be un-
               reliable on some platforms.
    COMMENTS:  tsLibGUI/tsWxGraphicalTextUserInterface mouse
    "Click" Event handling can be unreliable on some plat-
    forms. What works on Windows with Cygwin sometimes
    crashes on Ubuntu Linux.

    Troubleshooting Hint:

    Detected caret position, at time of mouse click, con-
    sidered to be outside of displayed GUI object border.

    Perhaps displayed GUI object border must be pre-aligned
    with character cell display.

   ---------------------------------------------------------

47. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  lack of Pending Event handling.
    COMMENTS:  tsLibGUI/tsWxGraphicalTextUserInterface
    lack of Pending Event handling.

    wxPython-style event handling should include front-end
    (real time) dispatching or queuing with back-end (idle
    time) ProcessPendingEvent handling.

    While the wxPython emulation is under construction, the
    workaround involves front-end use of
    tsWxProcessSelectedEventTable. The workaround has been
    used after much trial and error to demonstrate buttons,
    checkboxes, radio buttons and the scroll bar "arrow"
    buttons and gauges associated with text scrolling.

   ---------------------------------------------------------

48. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: SourceDistributions/Developer-Sandboxes
    SYNOPSIS:  Hierarchical library file structure inter-
               feres with operation of pylint and pydoc.
    COMMENTS:  SourceDistributions/Developer-Sandboxes
    Hierarchical library file structure interferes with
    operation of pylint and pydoc.

    Pylint is a tool that checks for errors in Python code,
    tries to enforce a coding standard and looks for bad
    code smells. This is similar but nevertheless different
    from what pychecker provides, especially since pychecker
    explicitly does not bother with coding style. The
    default coding style used by Pylint is close to PEP 8
    (aka Guido's style guide).

    Pydoc is a documentation module for the programming
    language Python. Similar to the functionality of
    Perldoc within Perl, Pydoc allows Python programmers
    to access Python's documentation help files, generate
    HTML pages with documentation specifics, and find the
    appropriate module for a particular job. Pydoc can be
    accessed from a module-specific GUI, from within the
    Python interpreter, or from a command line shell

    Pylint and Pydoc expect to process files from within a
    monolithic file directory. When invoked within a
    hierarchical file directory with its hierarchical
    "package" import mechanism, they report various import
    errors which degrade their usefulness.

   ---------------------------------------------------------

49. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsTools/tsStripComments
    SYNOPSIS:  reports "IndentationError" unless Python
               files have been "untabified" before
               being processed.
    COMMENTS: tsTools/tsStripComments reports
    "IndentationError" unless Python files have been
    "untabified" (Emacs term for the replacement of tab
    characters by the correct number of blank spaces) before
    being processed by tsStripComments.

   ---------------------------------------------------------

50. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsTools/tsStripComments
    SYNOPSIS:  requires a purpose labeled doc string to
               avoid rendering unusable such doc string
               dependent modules as tsOperatorSettingsParser.
    COMMENTS:  tsTools/tsStripComments requires a purpose
    labeled doc string to avoid rendering unusable such doc
    string dependent modules as tsOperatorSettingsParser.

    Blank lines within doc strings are visually used to
    define the end of one paragraph and the start of a new
    one.

    a. tsOperatorSettingsParser uses the text wrap module to
       ensure that text fits within the available run time
       display area.

    b. Text wrap depends on blank lines to avoid merging
       text from separate paragraphs.

    c. Authoring doc strings with blank lines is both
       natural and effective at achieving the correct
       display.

    d. tsStripComments originally did not recognize the
       appropriateness of removing some blank lines but not
       others. An update removed all but the first of a
       sequence of consecutive blank lines.

    e. The main application using a tsOperatorSettings-
       Parser-like module passes the module's launch purpose
       via a doc string which is subject to stripping. All
       other launch parameters (such as title, author, build
       version and build date) are passed by reference to
       the associated labeled doc string. See BuildPurpose
       AttributeError for traceback example when doc string
       deleted and Purpose = __doc__  attempted to pass a
       NoneType.

    f. A simple work around would be to create a purpose
       labeled doc string which will not be subject to
       comment stripping. A reference to the label can then
       be passed instead of the one to the unlabeled doc
       string.

   ---------------------------------------------------------

51. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGridSizer
    SYNOPSIS:  requires Button click event handling to be
               directly coupled to keypad button window
               rather than coupled to the parent Frame
               provided handler.
    COMMENTS:  tsLibGUI/tsWxGridSizer requires Button click
    event handling to be directly coupled to keypad button
    window rather than coupled to the parent Frame provided
    handler.

    test_tsWxGridSizer event processing generates too many
    event messages per button click. Button click event
    handling needs to be directly coupled to keypad button
    window rather than coupled to the parent Frame provided
    handler.

   ---------------------------------------------------------

52. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  requires use of configuration control
               switch USE_256_COLOR_PAIR_LIMIT to
               support xterm-88color and xterm-256color
               consoles.
    COMMENTS:  tsLibGUI/tsWxGraphicalTextUserInterface
    requires use of configuration control switch
    USE_256_COLOR_PAIR_LIMIT to support xterm-88color and
    xterm-256color consoles.

    Undocumented "Curses" / "nCurses" 256 color pair limitation
    constrains support for xterm-88color and xterm-256color
    consoles.

    Workaround provides addition of configuration control switch
    USE_256_COLOR_PAIR_LIMIT to "tsWxGlobals.py" file and support
    for xterm-88color and xterm-256color consoles which is
    equivalent to that for xterm-16color type console. The
    latter provides the automatic mapping of the 68x68 standard
    "wxPython" foreground/background color name combinations into
    the available 16x16 "Curses" / "nCurses" 256 color name pairs.

    Without xterm-16color console type support, use of the 68x68
    standard "wxPython" foreground/background color combinations,
    included in a 71-color palette, will produce both the incor-
    rect color and such unwanted display attributes as underlines,
    blinking etc.

   ---------------------------------------------------------

53. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  introduces GUI Object Automatic Layout
               Anomalies.
    COMMENTS:  tsLibGUI/tsWxGraphicalTextUserInterface
    introduces GUI Object Automatic Layout Anomalies.

    Use of wxPython-style sizers to automatically layout complex
    assemblies of GUI Objects typically produce the telescoping
    or overlapping of adjacent border lines into a single line.

    Use of wxPython-style pixel dimensions are associated with
    the nearest available Curses column and row. Anomalies show
    up only when derived pixel dimensions are not integer multi-
    ples of the pixel width and height for the fixed width font
    of a single character. For example, try using
    test_tsWxScrolledWindow.py.

   ---------------------------------------------------------

54. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsLibGUI/tsWxGraphicalTextUserInterface
    SYNOPSIS:  requires platform-specific SplashScreen
               Bitmap Images.
    COMMENTS:  tsLibGUI/tsWxGraphicalTextUserInterface
    requires platform-specific SplashScreen Bitmap Images.

    Use of a SplashScreen Bitmap image are platform dependent.
    An image created and saved on a Cygwin console reloads
    and is displayed only on a Cygwin console. It cannot
    reload and display on a Linux, Mac OS X or Unix xterm.
    Bitmap images are also console size dependent.

    A new Splash Screen is built in directory "./logs/bmp/"
    upon the first use of a uniquely sized command line
    interface display by those host operating systems that
    share this directory.

    The toolkit design therefore creates, saves and installs a
    Bitmap image for each platform. The images are identified
    via their platform-specific names. After running any of
    GUI test applications in "tsDemoArchive", examine the
    contents of ./logs/bmp/README_BMP.txt. It explains and
    illustrates the naming convention.

    NOTE: The previous terminal emulator used in a command
          line interface shell can alter the built-in color
          palette for subsequent terminal emulators.

          Examples:

          1) The final xterm sees no color palette change
             if the first one is xterm followed by
             xterm-color, vt100 and xterm.

          2) The final xterm sees a dim color palette change
             if the first one is xterm followed by by
             xterm-16color, vt100 and xterm.

   ---------------------------------------------------------

55. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: Local & Remote Host Operating Systems
    SYNOPSIS:  require configuration of user privileges
               for remote access.
    COMMENTS:  Local & Remote Host Operating Systems
    require configuration of user privileges for remote
    access.

    A local platform connected to one or more remote plat-
    forms, which together are operating in "Stand-Among
    Mode", may report various connection errors.

    Use of the OpenSSH SSH client (remote login program) via
    the command "ssh <user id>@<remote host id>" may require
    the System Administrators, Software Engineers or System
    Operators to temporarily suspend or permanently modify
    local and/or remote computer security settings:

    Authorize local computer on remote system to resolve
    the issue: "ssh: connect to host <IP Address> port 22;
    Connection refused"

    Unblock firewall on remote system to resolve the issue:
    "sh: connect to host <IP Address> port 22; Connection
    timed out"

   ---------------------------------------------------------

56. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: SourceDistributions/Developer-Sandboxes
    SYNOPSIS:  instrumentation to facilitate debugging has
               been left activated.
    COMMENTS:  SourceDistributions/Developer-Sandboxes
    instrumentation to facilitate debugging has been left
    activated. Module level variables have been set to enable
    built-in code to log and display both normal progress and
    unexpected events.

    The "tsWxGTUI" Toolkit is a work in progress. Unless one
    is introducing only localized changes, remembering where
    to find and turn debug control flags "on" and "off"
    quickly become tedious and vexing. Ignoring the automa-
    tically generated information until debugging is required
    is relatively painless.

   ---------------------------------------------------------

57. STATUS:    OPEN
    RELEASE:   rigordo959/tsWxGTUI_PyVx_Repository
    COMPONENT: tsWxGTUI_PyVx Toolkit
    SYNOPSIS:  is NOT compatible with either PDCurses or UniCurses.
    COMMENTS:  The tsWxGTUI_PyVx Toolkit is NOT compatible
    with either PDCurses or UniCurses.

    Here is an update on my development of a cross-platform
    software development toolkit, in Python, having a
    text-mode Graphical-style User Interface (GUI) as it
    relates to PDCurses:

    The toolkit features the high-level GUI application-
    programming interface of the wxPython wrapper to pixel-
    mode wxWidgets, which is implemented in C++.

    The toolkit is implemented using the low-level GUI
    application-programming interface of Curses/Ncurses,
    which is implemented in C but accessed via a standard-
    ized multi-level library of Python classes, functions
    and methods and an application wrapper method, which
    saves the terminal state before curses 'initscr' and
    restores it after curses 'endwin'. I recall once
    coming across a statement that the standard Python
    Curses/NCurses library had been implemented in the
    C rather than in the Python language.

    The toolkit source code (100+K executable lines of
    Python) is usable, without change, on computers having
    32-/64-bit processors and Linux, Mac OS X, Microsoft
    Windows (requires Cygwin, the free Linux-like plug-in
    from Red Hat) or Unix operating systems.

    The toolkit supports 8-/16-color (64-/256-color pair)
    xterm-family and non-color vt100-family terminal
    emulators.

    I've investigated the possibility of supporting
    PDCurses, which is implemented in C, and includes
    a single-level library of Python functions and methods.
    Unfortunately, the PDCurses Python library uses an
    application- programming interface structured like
    the C-language one, with c-type arguments, rather than
    one equivalent to the standard Python library. The
    PDCurses library is not compatible with the standard
    Python Curses/NCurses library.

    Searching for a multi-level library of Python classes,
    functions and methods compatible with the standard
    Python Curses/NCurses library, I discovered UniCurses.
    It uses whichever library (Curses, NCurses or PDCurses)
    is available. Like PDCurses, it uses an application-
    programming interface structured like the C-language
    one, with c-type arguments, rather than one equivalent
    to the standard Python library. I unsuccessfully
    experimented with wrapping its library with a standard-
    ized multi-level library of Python classes, functions
    and methods and an application wrapper method, which
    saves the terminal state before curses 'initscr' and
    restores it after curses 'endwin'. The c-type arguments
    precluded operation of my toolkit.

   ---------------------------------------------------------

======================= End-Of-File ========================
