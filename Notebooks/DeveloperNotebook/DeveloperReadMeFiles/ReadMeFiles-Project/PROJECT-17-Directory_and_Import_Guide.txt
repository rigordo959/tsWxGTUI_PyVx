#-----------------------------------------------------------
#"Time-stamp: <12/18/2016  3:02:45 PM rsg>"
#-----------------------------------------------------------

====== File: PROJECT-17-Directory_and_Import_Guide.txt =====

   +----+----+  TeamSTARS "tsWxGTUI_PyVx" Toolkit
   | ts | Wx |      with Python 2x & Python 3x based
   +----+----+         Command Line Interface (CLI)
   | G T U I |      and "Curses"-based "wxPython"-style, 
   +---------+         Graphical-Text User Interface (GUI)
 
   Get that cross-platform, pixel-mode "wxPython" feeling on
   platforms with:

   * 64-bit processors, nCurses 6.x, 64-bit Python 3.6.x or
     later GUI applications and character-mode 256-/16-/8-
     color (xterm-family) and non-color (vt100-family)
     terminals and terminal emulators.

   * 32-bit processors, nCurses 6.x/5.x, 32-bit Python 3.5.2
     or earlier GUI applications and character-mode 16-/8-
     color (xterm-family) and non-color (vt100-family)
     terminals and terminal emulators.

================= Directory and Import Guide ===============

1. Python Programming Language Versions

   The Python Software Foundation distrbutes source code and
   platform specific versions of Python. A third generation
   of the Python programming language has been released.

   The set of released versions are identified as 1x, 2x and
   3x.

   As each generation evolves there are new features, cap-
   abilities and bug fixes released:

   1.1 The 1x generation ended with 1.6.1.

   1.2 The 2x generation is currently at 2.7.10. Feature
       enhancements are no longer being accepted. Only a
       limited number of bug fixes will be accepted in
       the future.

   1.3 The 3x generation is currently at 3.5.0rc2 (the sec-
       ond candidate to an upcoming 3.5.0 release). Feature
       enhancements and bug fixes will still be accepted in
       the future.

2. Python Standard Library

   Each Python release includes a library of standard pack-
   ages and modules listed in its Global Module Index.

   Users simply import the package or module by name.

3. Third Party Libraries

   The Python Standard Library may be augmented by software
   developed by Python users and/or by other software devel-
   opers.

   Users them must import Third Party packages or modules
   via:

   3.1 Implicit Path Specification (Developer-Sandbox)

       If the application is launched within the directory
       containing an empty "__init__.py" package identifying
       file and the Third Party package or module, users
       simply import the Third Party package or module by
       name.

       Make a backup copy of each baseline Developer-Sandbox
       before making any changes to its contents.

       Feature enhancements and bug fixes may be freely
       introduced at the user's discretion.

   3.2 Explicit Path Specification (Site-Package)

       If the application is to be launchable from anywhere
       on the computer, users must first install the Third
       Party package or module as a Python version-specific
       Site-Package using the standard Python distutils
       package.

       From then on, the Third Party Site-Package becomes an
       extension of the Python Standard Library. Users sim-
       ply import the Third Party Site-Package and module by
       name.

       Make a backup copy of each baseline Site-Package
       before making any changes to its contents.

       Feature enhancements and bug fixes may only be intro-
       duced (and go into effect) via the intallation of a
       revised Site-Package. If the Site-Package identifier
       remains the same, the revised one will replace the
       previous one. If the Site-Package identifier is
       different, each version will available for use with
       its own unique identifier.

======================= End-Of-File ========================
