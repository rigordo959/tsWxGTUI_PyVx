#-----------------------------------------------------------
#"Time-stamp: <12/18/2016  2:38:51 PM rsg>"
#-----------------------------------------------------------

===================== File: COPYING.txt ====================

   +----+----+  TeamSTARS "tsWxGTUI_PyVx" Toolkit
   | ts | Wx |      with Python 2x & Python 3x based
   +----+----+         Command Line Interface (CLI)
   | G T U I |      and "Curses"-based "wxPython"-style, 
   +---------+         Graphical-Text User Interface (GUI)
 
   Get that cross-platform, pixel-mode "wxPython" feeling on
   platforms with:

   * 64-bit processors, nCurses 6.x, 64-bit Python 3.6.x or
     later GUI applications and character-mode 256-/16-/8-
     color (xterm-family) and non-color (vt100-family)
     terminals and terminal emulators.

   * 32-bit processors, nCurses 6.x/5.x, 32-bit Python 3.5.2
     or earlier GUI applications and character-mode 16-/8-
     color (xterm-family) and non-color (vt100-family)
     terminals and terminal emulators.

   You can find this and other plain-text files in the
   Toolkit subdirectory named:

       "./<Toolkit Recipient's Repository>/Documents".

       <Your Working Repository>
       (e.g. "tsWxGTUI_PyVx_Repository") 
         |
         |
         +-- ["Documents"]

=================== Copying Instructions ===================

  Steps to reproduce original or modified "tsWxGTUI_PyVx"
  Toolkit source code and documentation so as to comply with
  its original copyright and license terms and conditions.

  # Usage: cp [OPTION]... [-T] SOURCE DEST
  #   or:  cp [OPTION]... SOURCE... DIRECTORY
  #   or:  cp [OPTION]... -t DIRECTORY SOURCE...
  # Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.
  #
  # -p                           same as --preserve=mode,ownership,timestamps
  #     --preserve[=ATTR_LIST]   preserve the specified attributes (default:
  #                              mode,ownership,timestamps), if possible
  #                              additional attributes: context, links, xattr,
  #                              all
  #
  # -f, --force                  if an existing destination file cannot be
  #                              opened, remove it and try again (this option
  #                              is ignored when the -n option is also used)
  #
  # -R, -r, --recursive          copy directories recursively
   
  SOURCE=<Your Working Repository>     # Fill in your source path
  TARGET=<Your Destination Repository> # Fill in your target path

  cp -prf $SOURCE $TARGET

======================= End-Of-File ========================

