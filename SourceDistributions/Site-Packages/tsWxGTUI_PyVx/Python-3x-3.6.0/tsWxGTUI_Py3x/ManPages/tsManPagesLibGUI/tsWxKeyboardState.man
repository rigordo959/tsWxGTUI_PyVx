
Help on module tsWxKeyboardState:

NAME
    tsWxKeyboardState

FILE
    ./tsLibGUI/tsWxPkg/src/tsWxKeyboardState.py

DESCRIPTION
    tsWxKeyboardState.py - Class to hold information about keyboard
    modifier keys and is what is returned from wx.GetModifiers.

CLASSES
    __builtin__.object
        KeyboardState
    
    class KeyboardState(__builtin__.object)
     |  Provides methods for testing the state of the keyboard modifier keys.
     |  
     |  This class is used as a base class of wxKeyEvent and wxMouseState and,
     |  hence, indirectly, of wxMouseEvent, so its methods may be used to get
     |  information about the modifier keys which were pressed when the event
     |  occurred.
     |  
     |  Methods defined here:
     |  
     |  AltDown(self)
     |      Returns true if the Alt key is pressed.
     |      
     |      Notice that GetModifiers() should usually be used instead of this one.
     |  
     |  CmdDown(self)
     |      Returns true if the key used for command accelerators is pressed.
     |      
     |      Cmd is a pseudo key which is Control for PC and Unix platforms but
     |      Apple (or Command) key under Macs: it makes often sense to use it
     |      instead of ControlDown() because Command key is used for the same
     |      thing under Mac as Control elsewhere (even though Control still
     |      exists, it is usually not used for the same purpose under Mac).
     |      
     |      Notice that GetModifiers() should usually be used instead of this
     |      one. However, the Apple "Cmd" (Command) is Not supported, by
     |      Ncurses, on computer platforms running Mac OS X, Linux or Windows.
     |  
     |  ControlDown(self)
     |      Returns true if the Control key is pressed.
     |      
     |      This function does not distinguish between right and left control
     |      keys.
     |      
     |      In portable code you usually want to use CmdDown() to automatically
     |      test for the more frequently used Command key (and not the rarely
     |      used Control one) under Mac.
     |      
     |      Notice that GetModifiers() should usually be used instead of this one.
     |  
     |  GetModifiers(self)
     |      Return the bit mask of all pressed modifier keys.
     |      
     |      The return value is a combination of wxMOD_ALT, wxMOD_CONTROL,
     |      wxMOD_SHIFT and wxMOD_META bit masks. Additionally, wxMOD_NONE
     |      is defined as 0, i.e. corresponds to no modifiers
     |      (see HasModifiers()) and wxMOD_CMD is either wxMOD_CONTROL
     |      (MSW and Unix) or wxMOD_META (Mac), see CmdDown().
     |      See wxKeyModifier for the full list of modifiers.
     |      
     |      Notice that this function is easier to use correctly than, for
     |      example, ControlDown() because when using the latter you also
     |      have to remember to test that none of the other modifiers is pressed:
     |      
     |      if ( ControlDown() && !AltDown() && !ShiftDown() && !MetaDown() )
     |          ... handle Ctrl-XXX ...
     |      
     |      and forgetting to do it can result in serious program bugs (e.g.
     |      program not working with European keyboard layout where AltGr key
     |      which is seen by the program as combination of CTRL and ALT is used).
     |      On the other hand, you can simply write:
     |      
     |      if ( GetModifiers() == wxMOD_CONTROL )
     |          ... handle Ctrl-XXX ...
     |      
     |      with this function.
     |  
     |  HasModifiers(self)
     |      Returns true if any modifiers at all are pressed.
     |      
     |      This is equivalent to GetModifiers() != wxMOD_NONE.
     |  
     |  MetaDown(self)
     |      Returns true if the Meta/Windows/Apple key is pressed.
     |      
     |      This function tests the state of the key traditionally called Meta
     |      under Unix systems, Windows keys under MSW and Apple, or Command,
     |      key under Mac.
     |      
     |      Notice that GetModifiers() should usually be used instead of this one.
     |      
     |      See also:
     |      
     |      CmdDown()
     |      
     |      Reimplemented in wxMouseEvent.
     |      
     |      Notice: Apple "Cmd" (Command) Not supported, by Ncurses, on computer
     |      platforms running Mac OS X, Linux or Windows.
     |  
     |  SetAltDown(self, down)
     |      Sets the Alt key down state at the time of the event.
     |  
     |  SetCmdDown(self, down)
     |      Sets the Cmd key down state at the time of the event.
     |      "Cmd" is a pseudo key which is the same as Control for PC and Unix
     |      platforms but the special "Apple" (a.k.a as "Command") key on Macs.
     |      
     |      Notice: Apple "Cmd" (Command) Not supported, by Ncurses, on computer
     |      platforms running Mac OS X, Linux or Windows.
     |  
     |  SetControlDown(self, down)
     |      Sets the Control key down state at the time of the event.
     |  
     |  SetMetaDown(self, down)
     |      Sets the Meta key down state at the time of the event.
     |      
     |      Notice: Apple "Cmd" (Command) Not supported, by Ncurses, on computer
     |      platforms running Mac OS X, Linux or Windows.
     |  
     |  SetShiftDown(self, down)
     |      Sets the Shift key down state at the time of the event.
     |  
     |  ShiftDown(self)
     |      Returns true if the Shift key is pressed.
     |      
     |      This function does not distinguish between right and left shift keys.
     |      
     |      Notice that GetModifiers() should usually be used instead of this one.
     |  
     |  __del__(self)
     |  
     |  __init__(self, controlDown=False, shiftDown=False, altDown=False, metaDown=False)
     |      Constructor initializes the modifier key settings.
     |      
     |      By default, no modifiers are active.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

DATA
    DEBUG = True
    VERBOSE = True
    __authors__ = 'Richard S. Gordon'
    __copyright__ = 'Copyright (c) 2007-2013 Richard S. Gordon.\n\t\tAll r...
    __credits__ = '\n\n  Credits: \n\n\t  tsLibGUI Import & Application .....
    __date__ = '04/01/2013'
    __header__ = '\n\ntsWxKeyboardState, v1.0.0 (build 04/01/2013)\n\n... ...
    __license__ = 'GNU General Public License, Version 3, 29 June 2007'
    __line1__ = 'tsWxKeyboardState, v1.0.0 (build 04/01/2013)'
    __line2__ = 'Author(s): Richard S. Gordon'
    __line3__ = 'Copyright (c) 2007-2013 Richard S. Gordon.\n\t\tAll right...
    __line4__ = 'GNU General Public License, Version 3, 29 June 2...U Gene...
    __title__ = 'tsWxKeyboardState'
    __version__ = '1.0.0'
    mainTitleVersionDate = 'tsWxKeyboardState, v1.0.0 (build 04/01/2013)'

VERSION
    1.0.0

DATE
    04/01/2013

CREDITS
    
    
      Credits: 
    
    	  tsLibGUI Import & Application Launch Features: 
    	  Copyright (c) 2007-2009 Frederick A. Kier.
    			All rights reserved.
    
    	  Python Curses Module API & Run Time Library Features:
    	  Copyright (c) 2001-2013 Python Software Foundation.
    			All rights reserved.
    	  PSF License Agreement for Python 2.7.3 & 3.3.0
    
    	  wxWidgets (formerly wxWindows) & wxPython API Features:
    	  Copyright (c) 1992-2008 Julian Smart, Robert Roebling,
    			Vadim Zeitlin and other members of the 
    			wxWidgets team.
    			All rights reserved.
    	  wxWindows Library License
    
    	  nCurses API & Run Time Library Features:
    	  Copyright (c) 1998-2011 Free Software Foundation, Inc.
    			All rights reserved.
    	  GNU General Public License, Version 3, 29 June 2007


