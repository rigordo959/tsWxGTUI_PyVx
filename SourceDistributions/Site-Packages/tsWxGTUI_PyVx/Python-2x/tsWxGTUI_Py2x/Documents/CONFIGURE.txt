#-----------------------------------------------------------
#"Time-stamp: <12/18/2016  2:38:41 PM rsg>"
#-----------------------------------------------------------

=================== File: CONFIGURE.txt ====================

   +----+----+  TeamSTARS "tsWxGTUI_PyVx" Toolkit
   | ts | Wx |      with Python 2x & Python 3x based
   +----+----+         Command Line Interface (CLI)
   | G T U I |      and "Curses"-based "wxPython"-style, 
   +---------+         Graphical-Text User Interface (GUI)
 
   Get that cross-platform, pixel-mode "wxPython" feeling on
   platforms with:

   * 64-bit processors, nCurses 6.x, 64-bit Python 3.6.x or
     later GUI applications and character-mode 256-/16-/8-
     color (xterm-family) and non-color (vt100-family)
     terminals and terminal emulators.

   * 32-bit processors, nCurses 6.x/5.x, 32-bit Python 3.5.2
     or earlier GUI applications and character-mode 16-/8-
     color (xterm-family) and non-color (vt100-family)
     terminals and terminal emulators.

   You can find this and other plain-text files in the
   Toolkit subdirectory named:

       "./<Toolkit Recipient's Repository>/Documents".

       <Your Working Repository>
       (e.g. "tsWxGTUI_PyVx_Repository") 
         |
         |
         +-- ["Documents"]

================ Configuration Instructions ================

   These instructions describe the steps to configure the
   Toolkit files.

   The file you, or someone else previously downloaded,
   "tsWxGUI_PyVx" had a release number suffix (such as
   "-0.0.0"). It was a container of one or more Toolkit
   subdirectories.

   1. Toolkit Subdirectories

      The file you download is a container of one or more
      Toolkit subdirectories.

      The SourceDistributions directory is organized into
      a subdirectory for Developer-Sandboxes and one for
      Site-Packages. Each is then subdivided into:

      1.1 Subdirectory "tsWxGUI_Py2x"

          Each contains source code implemented in the second
          generation Python programming language.

          Each supports Python 2.7.0-Python 2.7.10.

      1.2 Subdirectory "tsWxGUI_Py3x"

          Each contains source code implemented in the third
          generation Python programming language.

          Each supports Python 3.0.0-Python 3.5.0.

      1.3 Though the aforementioned subdirectories may be
          installed on the same computer, differences
          between their Python language syntax, semantics
          and Python Global Module Index components pre-
          clude the intermixing or interchanging of their
          subdirectories.

          In fact, the Cygwin, Linux and some Unix operat-
          ing system environments typically include the
          Free Software Foundation's GNU "diff" utility.
          It can reveal the internal source file differ-
          ences.

      1.4 Though different, the aforementioned subdirecto-
          ries maintain the same:

          a. Look & Feel for their Command Line Inter-
             face (CLI)

          b. Look & Feel for their Graphical-style User
             Interface (GUI)

          c. Toolkit Application Programming Interface
             (API).

       1.5 Sequentially, each Python generation may be run
           in one Command Line Interface shell via:

           a. The "bash" shell on the Cygwin plug-in for
              Microsoft Windows, Linux, Mac OS X and Unix
              may be run for BOTH the Tookit's CLI and GUI.

           b. The "Command Prompt" on Microsoft Windows
              may be run ONLY for the Tookit's CLI.

       1.6 Concurrently, each Python generation must be run
           in its own Command Line Interface shell.

           a. The "bash" shell on the Cygwin plug-in for
              Microsoft Windows, Linux, Mac OS X and Unix
              may be run for BOTH the Tookit's CLI and GUI.

           b. The "Command Prompt" on Microsoft Windows
              may be run ONLY for the Tookit's CLI.

   2. Create a customizable, working copy of the Toolkit's
      original Command Line Interface configuration file.

      NOTES:

      (1) If you are working with "bash" shell commands on
          Cygwin (Microsoft Windows plug-in), Linux, OS X
          or Unix and with Python 2x, use the commands as
          shown.

      (2) If you are working with "bash" shell commands on
          Cygwin (Microsoft Windows plug-in), Linux, OS X
          or Unix and with Python 3x, replace all refer-
          ences to "2x" with "3x".

      (3) If you are working with the "Command Prompt"
          (cmd.exe) on Microsoft Windows, replace all refer-
          ences to "/" with "\" and replace all references to
          "cp" with "copy".

      (4) The "vi", "emacs" or "xemacs" text editors are
          typically included or optionally available in the
          installations of Cygwin, Linux, OS X or Unix.     

      (5) The "Notepad" plain text editor or "WordPad" editor
          of text docuents with complex formatting are typi-
          cally included the installed Microsoft accessories.     

          Optionally, you might install and try the "xemacs"
          text editor. A version for Microsoft Windows is
          available for download at:

             "http://www.xemacs.org/Download/index.html"

      2.1 For the Site-Packages the working copy must be
          located in the tsLibCLI directory.

          You may accomplish this via "bash" shell commands
          on Cygwin (Microsoft Windows plug-in), Linux, OS X
          or Unix:

             cd ./tsWxGTUI_PyVx/Python-2x/tsWxGTUI_Py2x/
                  tsLibCLI
             cp -p tsCXGlobals.py tsCxGlobals.orig
             xemacs tsCxGlobals.py

      2.2 For the Developer-Sandboxes the working copy must be
          located in the same directory that contains tsLibCLI
          and tsLibGUI.

          You may accomplish this via "bash" shell commands
          on Cygwin (Microsoft Windows plug-in), Linux, OS X
          or Unix:

             cd ./tsWxGTUI_PyVx/Python-2x/tsWxGTUI_Py2x/
                  tsLibCLI/tsCxGlobalsPkg/src
             cp -p ./tsCxGlobals.py ../../../
             xemacs tsCxGlobals.py

   3. Modify the customizable, working copy of the file you
      just created as appropriate to either use or change the
      ThemeToUse.

         http://www.xemacs.org/Download
               /win32/#InnoSetup-Stable-Download

      Editing should replace the uncommented line

         "ThemeToUse = Theme_Toolkit_Engineer"

      to an uncommented copy of one more appropriate for
      your needs:

      ## Configurations for Supervisory Control and Data
      ## Acquisition
      ##ThemeToUse = Theme_SCADA_Operator      # Least verbose logging.
      ##ThemeToUse = Theme_SCADA_Engineer
      ##ThemeToUse = Theme_SCADA_Administrator
      ##ThemeToUse = Theme_SCADA_Service

      ## Configurations for Application Software Development
      ##ThemeToUse = Theme_Application_Engineer
      ##ThemeToUse = Theme_Application_Administrator
      ##ThemeToUse = Theme_Application_Service

      ## Configurations for "tsWxGTUI" Toolkit Software Development
      ##ThemeToUse = Theme_Toolkit_Engineer    # Most verbose logging.
      ##ThemeToUse = Theme_Toolkit_Administrator
      ##ThemeToUse = Theme_Toolkit_Service

      ThemeToUse = Theme_Toolkit_Engineer

      NOTES:

      (1) Do NOT make other changes to the customizable,
          working copy of "tsCxGlobals.py" unless you are
          familiar with the annotated Python source code
          and prepared to undertake troubleshooting.

      (2) Do NOT modify the "tsCxGlobals.py" master file in the
          "./tsWxGTUI_PyVx/tsLibCLI/tsCxGlobalsPkg/src" dir-
          ectory unless you can retrieve a known working
          backup from a revision control tool for software
          developers such as Git, Mercurial (hg) or CVS.

   4. Create a recovery backup for the customizable, working
      copy of the Toolkit's original "wxPython"-style Graph-
      ical User Interface configuration file either.

      4.1 Via "bash" shell command on Cygwin (Microsoft
          Windows plug-in), Linux, OS X or Unix:

          "cd ./tsWxGTUI_PyVx"/tsLibGUI/tsWxPkg/src"

          "cp -p ./tsWxGlobals.py ./tsWxGlobals.py-TeamSTARS"

      4.2 Via "Command Prompt" shell command on Microsoft
          Windows:

          "cd .\tsWxGTUI_PyVx"\tsLibCLI\tsCxGlobalsPkg\src"

======================= End-Of-File ========================
