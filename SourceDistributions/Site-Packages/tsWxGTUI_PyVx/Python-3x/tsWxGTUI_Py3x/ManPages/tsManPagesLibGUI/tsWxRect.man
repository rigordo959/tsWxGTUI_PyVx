
Help on module tsWxRect:

NAME
    tsWxRect

FILE
    ./tsLibGUI/tsWxPkg/src/tsWxRect.py

DESCRIPTION
    tsWxRect.py - Class to represent the position and size of a
    graphical object with integer x (horizontal) and y (vertical)
    postion and with integer width (horizontal) and height (vertical)
    size properties.

CLASSES
    __builtin__.object
        Rect
    
    class Rect(__builtin__.object)
     |  A class for representing and manipulating rectangles. It has x, y, width
     |  and height properties. In wxPython most places that expect a wx.Rect can
     |  also accept a (x,y,width,height) tuple.
     |  
     |  Methods defined here:
     |  
     |  CenterIn(self, r, dir=12)
     |      Center this rectangle within the one passed to the method, which
     |      is usually, but not necessarily, the larger one.
     |  
     |  CentreIn(self, r, dir=12)
     |      Center this rectangle within the one passed to the method, which
     |      is usually, but not necessarily, the larger one.
     |  
     |  Contains(self, pt)
     |      Return True if the point is inside the rect.
     |  
     |  ContainsRect(self, rect)
     |      Returns True if the given rectangle is completely inside this
     |      rectangle or touches its boundary.
     |  
     |  ContainsXY(self, x, y)
     |      Return True if the point is inside the rect.
     |  
     |  Deflate(self, dx, dy)
     |      Decrease the rectangle size. This method is the opposite of Inflate
     |      in that Deflate(a,b) is equivalent to Inflate(-a,-b). Please refer
     |      to Inflate for a full description.
     |  
     |  Get(self)
     |      Return the rectangle properties as a tuple.
     |  
     |  GetBottom(self)
     |  
     |  GetBottomLeft(self)
     |  
     |  GetBottomRight(self)
     |  
     |  GetHeight(self)
     |  
     |  GetLeft(self)
     |  
     |  GetPosition(self)
     |  
     |  GetRight(self)
     |  
     |  GetSize(self)
     |  
     |  GetTop(self)
     |  
     |  GetTopLeft(self)
     |  
     |  GetTopRight(self)
     |  
     |  GetWidth(self)
     |  
     |  GetX(self)
     |  
     |  GetY(self)
     |  
     |  Inflate(self, dx, dy)
     |      Increases the size of the rectangle.
     |      
     |      The left border is moved farther left and the right border is moved
     |      farther right by dx. The upper border is moved farther up and the
     |      bottom border is moved farther down by dy. (Note the the width and
     |      height of the rectangle thus change by 2*dx and 2*dy, respectively.)
     |      If one or both of dx and dy are negative, the opposite happens: the
     |      rectangle size decreases in the respective direction.
     |      
     |      The change is made to the rectangle inplace, if instead you need a
     |      copy that is inflated, preserving the original then make the copy
     |      first:
     |      
     |      copy = wx.Rect(*original)
     |      copy.Inflate(10,15)
     |      
     |      Inflating and deflating behaves naturally. Defined more precisely,
     |      that means:
     |      
     |      * Real inflates (that is, dx and/or dy >= 0) are not constrained.
     |      Thus inflating a rectangle can cause its upper left corner to move
     |      into the negative numbers. (The versions prior to 2.5.4 forced the
     |      top left coordinate to not fall below (0, 0), which implied a forced
     |      move of the rectangle.)
     |      
     |      * Deflates are clamped to not reduce the width or height of the
     |      rectangle below zero. In such cases, the top-left corner is
     |      nonetheless handled properly. For example, a rectangle at (10, 10)
     |      with size (20, 40) that is inflated by (-15, -15) will become located
     |      at (20, 25) at size (0, 10). Finally, observe that the width and
     |      height are treated independently. In the above example, the width is
     |      reduced by 20, whereas the height is reduced by the full 30 (rather
     |      than also stopping at 20, when the width reached zero).
     |  
     |  Inside(self, pt)
     |      Return True if the point is inside the rect.
     |  
     |  InsideRect(self, rect)
     |      Returns True if the given rectangle is completely inside this
     |      rectangle or touches its boundary.
     |  
     |  InsideXY(self, x, y)
     |      Return True if the point is inside the rect.
     |  
     |  Intersect(self, rect)
     |      Returns the intersectsion of this rectangle and rect.
     |      TBD - Under Construction.
     |  
     |  Intersects(self, rect)
     |      Returns True if the rectangles have a non empty intersection.
     |      TBD - Under Construction; Do NOT Use.
     |  
     |  IsEmpty(self)
     |      Under Construction.
     |  
     |  Offset(self, pt)
     |      Same as OffsetXY but uses dx, dy from Point.
     |  
     |  OffsetXY(self, dx, dy)
     |      Moves the rectangle by the specified offset. If dx is positive, the
     |      rectangle is moved to the right, if dy is positive, it is moved to
     |      the bottom, otherwise it is moved to the left or top respectively.
     |  
     |  Set(self, x=0, y=0, width=0, height=0)
     |      Set all rectangle properties.
     |  
     |  SetBottom(self, bottom)
     |      Under Construction.
     |  
     |  SetBottomLeft(self, pt)
     |      Under Construction.
     |  
     |  SetBottomRight(self, pt)
     |      Under Construction.
     |  
     |  SetHeight(self, h)
     |      Under Construction.
     |  
     |  SetLeft(self, left)
     |      Under Construction.
     |  
     |  SetPosition(self, pt)
     |      Under Construction.
     |  
     |  SetRight(self, right)
     |      Under Construction.
     |  
     |  SetSize(self, sz)
     |      Under Construction.
     |  
     |  SetTop(self, top)
     |      Under Construction.
     |  
     |  SetTopLeft(self, pt)
     |      Under Construction.
     |  
     |  SetTopRight(self, pt)
     |      Under Construction.
     |  
     |  SetWidth(self, w)
     |      Under Construction.
     |  
     |  SetX(self, x)
     |      Under Construction.
     |  
     |  SetY(self, y)
     |      Under Construction.
     |  
     |  Union(self, rect)
     |      Under Construction.
     |      
     |      Returns the rectangle containing the bounding box of this rectangle
     |      and the one passed in as parameter.
     |  
     |  __add__(self, rect)
     |      Add the properties of rect to this rectangle and return the result.
     |  
     |  __eq__(self, other)
     |      Test for equality of wx.Rect objects.
     |  
     |  __getitem__(self, index)
     |      Under Construction.
     |  
     |  __iadd__(self, rect)
     |      Add the properties of rect to this rectangle, updating this rectangle.
     |  
     |  __init__(self, x=0, y=0, width=0, height=0)
     |      Create a new Rect object.
     |  
     |  __len__(self)
     |      Return length of this object.
     |  
     |  __ne__(self, other)
     |      Test for inequality of wx.Rect objects.
     |  
     |  __nonzero__(self)
     |      Return True if this object is not zero.
     |  
     |  __reduce__(self)
     |      Under Construction.
     |  
     |  __repr__(self)
     |      Return text representation.
     |  
     |  __setitem__(self, index, val)
     |      Under Construction.
     |  
     |  __str__(self)
     |      Return text representation.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  tsGetRectType(*args)
     |      Generate the specified class instance from the specified tuple.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  Bottom
     |  
     |  BottomLeft
     |  
     |  BottomRight
     |  
     |  Empty
     |      Under Construction.
     |  
     |  Height
     |  
     |  Left
     |  
     |  Position
     |  
     |  Right
     |  
     |  Size
     |  
     |  Top
     |  
     |  TopLeft
     |  
     |  TopRight
     |  
     |  Width
     |  
     |  X
     |  
     |  Y
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  height
     |  
     |  width
     |  
     |  x
     |  
     |  y

DATA
    DEBUG = True
    VERBOSE = True
    __authors__ = 'Richard S. Gordon'
    __copyright__ = 'Copyright (c) 2007-2013 Richard S. Gordon.\n\t\tAll r...
    __credits__ = '\n\n  Credits: \n\n\t  tsLibGUI Import & Application .....
    __date__ = '04/01/2013'
    __header__ = '\n\ntsWxRect, v1.1.0 (build 04/01/2013)\n\n  Author(... ...
    __license__ = 'GNU General Public License, Version 3, 29 June 2007'
    __line1__ = 'tsWxRect, v1.1.0 (build 04/01/2013)'
    __line2__ = 'Author(s): Richard S. Gordon'
    __line3__ = 'Copyright (c) 2007-2013 Richard S. Gordon.\n\t\tAll right...
    __line4__ = 'GNU General Public License, Version 3, 29 June 2...U Gene...
    __title__ = 'tsWxRect'
    __version__ = '1.1.0'
    mainTitleVersionDate = 'tsWxRect, v1.1.0 (build 04/01/2013)'

VERSION
    1.1.0

DATE
    04/01/2013

CREDITS
    
    
      Credits: 
    
    	  tsLibGUI Import & Application Launch Features: 
    	  Copyright (c) 2007-2009 Frederick A. Kier.
    			All rights reserved.
    
    	  Python Curses Module API & Run Time Library Features:
    	  Copyright (c) 2001-2013 Python Software Foundation.
    			All rights reserved.
    	  PSF License Agreement for Python 2.7.3 & 3.3.0
    
    	  wxWidgets (formerly wxWindows) & wxPython API Features:
    	  Copyright (c) 1992-2008 Julian Smart, Robert Roebling,
    			Vadim Zeitlin and other members of the 
    			wxWidgets team.
    			All rights reserved.
    	  wxWindows Library License
    
    	  nCurses API & Run Time Library Features:
    	  Copyright (c) 1998-2011 Free Software Foundation, Inc.
    			All rights reserved.
    	  GNU General Public License, Version 3, 29 June 2007


