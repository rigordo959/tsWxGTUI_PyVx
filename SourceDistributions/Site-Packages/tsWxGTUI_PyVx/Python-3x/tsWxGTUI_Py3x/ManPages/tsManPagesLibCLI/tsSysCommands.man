<open file '/usr/bin/logs/2015-04-20-at-06-25-49/pydoc.log', mode 'w' at 0x7fd63288>
Help on module tsSysCommands:

NAME
    tsSysCommands

FILE
    /cygdrive/d/WR/Technical_Preview-Draft/tsWxGTUI_PyVx/Python-2x/tsWxGTUI_Py2x/tsLibCLI/tsSysCommands.py

DESCRIPTION
    tsSysCommands.py - Class definition and methods for issuing
    shell commands to and receiving responses from the host
    operating system.

CLASSES
    __builtin__.object
        TsSysCommands
    
    class TsSysCommands(__builtin__.object)
     |  This class wraps the Python subprocess module which allows you to spawn
     |  new processes, connect to their input/output/error pipes, and obtain
     |  their return codes.
     |  
     |  Static methods defined here:
     |  
     |  tsCall(args, bufsize=0, executable=None, stdin=None, stdout=None, stderr=None, preexec_fn=None, close_fds=False, shell=False, cwd=None, env=None, universal_newlines=False, startupinfo=None, creationflags=0)
     |      Run command with arguments. Wait for command to complete,
     |      then return the returncode attribute.
     |      
     |      The arguments are the same as for the Popen constructor.
     |      
     |      Example: retcode = call(["ls", "-l"])
     |  
     |  tsCheckCall(args, bufsize=0, executable=None, stdin=None, stdout=None, stderr=None, preexec_fn=None, close_fds=False, shell=False, cwd=None, env=None, universal_newlines=False, startupinfo=None, creationflags=0)
     |      Run command with arguments. Wait for command to complete.
     |      If the exit code was zero then return, otherwise raise
     |      CalledProcessError. The CalledProcessError object will
     |      have the return code in the returncode attribute.
     |      
     |      The arguments are the same as for the Popen constructor.
     |      
     |      Example: check_call(["ls", "-l"])
     |  
     |  tsGetOutput(theCmd)
     |      Like getstatusoutput(), except the exit status is ignored and the
     |      return value is a string containing the command output.
     |  
     |  tsGetStatus(theFile)
     |      Return the output of "ls -ld theFile" as a string. This
     |      function uses the getoutput() function, and properly
     |      escapes backslashes and dollar signs in the argument.
     |  
     |  tsGetStatusOutput(cmd)
     |      Execute the string cmd in a shell with os.popen() and return a
     |      2-tuple (status, output). cmd is actually run as { cmd ; } 2>&1,
     |      so that the returned output will contain output or error messages.
     |      A trailing newline is stripped from the output. The exit status
     |      for the command can be interpreted according to the rules for
     |      the C function wait().
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

DATA
    CommandLineEnvWrapperEnable = True
    __authors__ = 'Richard S. Gordon'
    __copyright__ = 'Copyright (c) 2007-2013 Richard S. Gordon.\n\t\tAll r...
    __credits__ = '\n\n  Credits: \n\n\t  tsLibCLI Import & Application .....
    __date__ = '09/18/2013'
    __header__ = '\n\ntsSysCommands.py, v2.1.0 (build 09/18/2013)\n\n ...-...
    __license__ = 'GNU General Public License, Version 3, 29 June 2007'
    __line1__ = 'tsSysCommands.py, v2.1.0 (build 09/18/2013)'
    __line2__ = 'Author(s): Richard S. Gordon'
    __line3__ = 'Copyright (c) 2007-2013 Richard S. Gordon.\n\t\tAll right...
    __line4__ = 'GNU General Public License, Version 3, 29 June 2...7-2009...
    __title__ = 'tsSysCommands.py'
    __version__ = '2.1.0'
    mainTitleVersionDate = 'tsSysCommands.py, v2.1.0 (build 09/18/2013)'

VERSION
    2.1.0

DATE
    09/18/2013

CREDITS
    
    
      Credits: 
    
    	  tsLibCLI Import & Application Launch Features: 
    	  Copyright (c) 2007-2009 Frederick A. Kier.
    			All rights reserved.


